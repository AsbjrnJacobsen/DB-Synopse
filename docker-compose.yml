services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my_network
      - default
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 10s
      retries: 5

  orderservice:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    deploy:
      replicas: 2
    networks:
      - my_network
    depends_on:
      servicediscovery:
        condition: service_started
    
  inventoryservice:
    build:
      context: .
      dockerfile: InventoryService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    deploy:
      replicas: 2
    networks:
      - my_network
    depends_on:
      - servicediscovery
      - rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8083 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      
      
  loadbalancer:
    ports:
      - 8086:8086
    build:
      context: .
      dockerfile: LoadBalancer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - my_network
      - default
  
  servicediscovery:
    build:
      context: .
      dockerfile: ServiceDiscovery/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - my_network
    depends_on:
      loadbalancer:
        condition: service_started

networks:
  my_network:
    driver: bridge